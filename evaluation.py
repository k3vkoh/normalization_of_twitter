# -*- coding: utf-8 -*-
"""Evaluation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZsoCl1WlkMTge_jl-KaqJK4OY_4TSM1R

# Install
"""

!pip install speechbrain
!pip install transformers torch
!pip install jiwer

"""# Load/Prep Data"""

from google.colab import drive
import os
import pandas as pd
import numpy as np
import json
import random

drive.mount('/content/drive/', force_remount=True)

# load output
output_path = '/content/drive/MyDrive/Independent Study/output.xlsx'

df = pd.read_excel(output_path)

"""# Error Rate"""

from jiwer import wer

def calc_error_rate(reference, hypothesis):
  return wer(reference, hypothesis)

paper_error_rates = []
crf_error_rates = []
no_crf_error_rates = []

for index, row in df.iterrows():
  my_truth = row['User Normalized']
  paper = row['Truth']
  crf = row['CRF Normalized']
  no_crf = row['No CRF Normalized']
  paper_error_rates.append(calc_error_rate(my_truth, paper))
  crf_error_rates.append(calc_error_rate(my_truth, crf))
  no_crf_error_rates.append(calc_error_rate(my_truth, no_crf))

mean_paper_er = sum(paper_error_rates) / len(paper_error_rates)
mean_crf_er = sum(crf_error_rates) / len(crf_error_rates)
mean_no_crf_er = sum(no_crf_error_rates) / len(no_crf_error_rates)

print("Mean Paper Error Rate:", mean_paper_er)
print("Mean CRF Normalized Error Rate:", mean_crf_er)
print("Mean No CRF Normalized Error Rate:", mean_no_crf_er)

"""# Google Forms"""

# will be using https://huggingface.co/speechbrain/tts-tacotron2-ljspeech

import torchaudio
from speechbrain.inference.TTS import Tacotron2
from speechbrain.inference.vocoders import HIFIGAN

# Intialize TTS (tacotron2) and Vocoder (HiFIGAN)
tacotron2 = Tacotron2.from_hparams(source="speechbrain/tts-tacotron2-ljspeech", savedir="tmpdir_tts")
hifi_gan = HIFIGAN.from_hparams(source="speechbrain/tts-hifigan-ljspeech", savedir="tmpdir_vocoder")
wav_path = '/content/drive/MyDrive/Independent Study/tts/'

def text_to_speech(text, name):
  mel_output, mel_length, alignment = tacotron2.encode_text(text)
  waveforms = hifi_gan.decode_batch(mel_output)
  torchaudio.save(wav_path + name + '.wav',waveforms.squeeze(1), 22050)

indices = [4, 13, 16, 25, 42, 44, 58, 92, 94, 97]

for x in indices:
  temp_name = 'example_' + str(x)
  row = df.iloc[x]

  input_name = temp_name + '_input'
  input = row['Input']
  text_to_speech(input, input_name)

  paper_name = temp_name + '_paper'
  paper = row['Truth']
  text_to_speech(paper, paper_name)

  crf_name = temp_name + '_crf'
  crf = row['CRF Normalized']
  text_to_speech(crf, crf_name)

  no_crf_name = temp_name + '_nocrf'
  no_crf = row['No CRF Normalized']
  text_to_speech(no_crf, no_crf_name)